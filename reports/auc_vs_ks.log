Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import pandas as pd
import random
from matplotlib import pyplot as plt
from sklearn.datasets import make_classification
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, f1_score, roc_auc_score
from sklearn.model_selection import train_test_split
from scipy.stats import ks_2samp
from ks_metric import ks_score


X, y = make_classification(
    n_samples=1000, class_sep=0.3, random_state=0
)  # 1000 samples with 20 features

# split train-test
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.33, random_state=42
)

# simple Logistic Model
model = LogisticRegression(random_state=23)
model.fit(X_train, y_train)

# predictions
y_train_pred = model.predict_proba(X_train)[:, 1]
y_test_pred = model.predict_proba(X_test)[:, 1]

print("Accuracy train:", accuracy_score(y_train, y_train_pred > 0.5))
print("Accuracy test:", accuracy_score(y_test, y_test_pred > 0.5))
print("F1 train:", f1_score(y_train, y_train_pred > 0.5))
print("F1 test:", f1_score(y_test, y_test_pred > 0.5))
print("AUC train:", roc_auc_score(y_train, y_train_pred))
print("AUC test:", roc_auc_score(y_test, y_test_pred))
print("KS train:", ks_2samp(y_train, y_train_pred).statistic)
print("KS test:", ks_2samp(y_test, y_test_pred).statistic)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<cell line: 10>[0;34m()[0m
[1;32m      8[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmodel_selection[39;00m [38;5;28;01mimport[39;00m train_test_split
[1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01mscipy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mstats[39;00m [38;5;28;01mimport[39;00m ks_2samp
[0;32m---> 10[0m [38;5;28;01mfrom[39;00m [38;5;21;01mks_metric[39;00m [38;5;28;01mimport[39;00m ks_score
[1;32m     13[0m X, y [38;5;241m=[39m make_classification(
[1;32m     14[0m     n_samples[38;5;241m=[39m[38;5;241m1000[39m, class_sep[38;5;241m=[39m[38;5;241m0.3[39m, random_state[38;5;241m=[39m[38;5;241m0[39m
[1;32m     15[0m )  [38;5;66;03m# 1000 samples with 20 features[39;00m
[1;32m     17[0m [38;5;66;03m# split train-test[39;00m

[0;31mModuleNotFoundError[0m: No module named 'ks_metric'
ModuleNotFoundError: No module named 'ks_metric'

